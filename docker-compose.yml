version: '3'

services:
  db:
    image: postgres:10
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    ports:
    - "5432:5432"
    expose:
    - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 6

  redis:
    image: redis:3.2.11
    ports:
      - "6379:6379"

  magine:
    container_name: 'imagine'
    restart: always
    build: .
    volumes:
      - ./_state:/home/magine/_state
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - db
      - celery


  celery:
    container_name: 'imagine_celery'
    build: .
    volumes:
     - '/home/magine'
    command: celery -A magine_gui_app worker --loglevel=debug
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
     - redis

volumes:
  postgres_data: